[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]


[spoolman]
server: http://192.168.178.20:7912
sync_rate: 5

[mqtt]
address: 192.168.178.21
port: 1883
username: voronmqtt
password: voron123
enable_moonraker_api: False

[sensor tasmota_power]
type: mqtt
name: Nous A1T
state_topic: tele/VT832TM/SENSOR
#state_topic: tasmota/discovery/349454837614/sensors
state_response_template:
  {% set resp = payload|fromjson %}
  {% set edata = resp["ENERGY"] %}
  {set_result("energy", edata["Total"])}
  {set_result("voltage", edata["Voltage"])}
  {set_result("power", edata["Power"])}
  {set_result("current", edata["Current"])}
parameter_power:
  units=W
parameter_voltage:
  units=V
parameter_current:
  units=mA
parameter_energy:
  units=kWh
history_field_energy_consumption:
  parameter=energy
  desc=Energy consumption
  strategy=delta
  units=kWh
  init_tracker=true
  precision=6
  exclude_paused=false
  report_total=true
  report_maximum=true
history_field_average_power:
  parameter=power
  desc=Average power draw
  strategy=average
  units=W
  report_total=false
  report_maximum=true
history_field_max_power:
  parameter=power
  desc=Maximum power draw
  strategy=maximum
  units=W
  init_tracker=true
  report_total=false
  report_maximum=false
history_field_average_current:
  parameter=current
  desc=Average current draw
  strategy=average
  units=A
  report_total=false
  report_maximum=true
history_field_max_current:
  parameter=current
  desc=Maximum current draw
  strategy=maximum
  units=A
  init_tracker=true
  report_total=false
  report_maximum=false

#[sensor powermeter]
#type: mqtt
#name: Nous A1T
#parameter_power:
#  units=W
#parameter_voltage:
#  units=V
#parameter_current:
#  units=A
#parameter_energy:
#  units=kWh
#state_topic: my-printer/status/switch:0
#state_response_template:
#  {% set notification = payload|fromjson %}
#  {set_result("power", notification["apower"]|float)}
#  {set_result("voltage", notification["voltage"]|float)}
 # {set_result("current", notification["current"]|float)}
  #{set_result("energy", notification["aenergy"]["total"]|float / 1000)}


# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail


# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

### moonraker-timelapse
### Don't forget to include timelapse.cfg to your printer.cfg
### Uncomment to enable moonraker-timelapse


#[update_manager timelapse]
#type: git_repo
#primary_branch: main
#path: ~/moonraker-timelapse
#origin: https://github.com/mainsail-crew/moonraker-timelapse.git
#managed_services: klipper moonraker

#[timelapse]
###   Directory where the generated video will be saved
#output_path: ~/timelapse/
###   Directory where ffmpeg is installed
#ffmpeg_binary_path: /usr/bin/ffmpeg

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh


[update_manager klipper_tmc_autotune]
type: git_repo
channel: dev
path: ~/klipper_tmc_autotune
origin: https://github.com/andrewmcgr/klipper_tmc_autotune.git
managed_services: klipper
primary_branch: main
install_script: install.sh


[update_manager Klipper-Adaptive-Meshing-Purging]
 type: git_repo
 channel: dev
 path: ~/Klipper-Adaptive-Meshing-Purging
 origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
 managed_services: klipper
 primary_branch: main


[update_manager beacon]
type: git_repo
channel: dev
path: ~/beacon_klipper
origin: https://github.com/beacon3d/beacon_klipper.git
env: ~/klippy-env/bin/python
requirements: requirements.txt
install_script: install.sh
is_system_service: False
managed_services: klipper
info_tags:
  desc=Beacon Surface Scanner

## Klippain Shake&Tune automatic update management
[update_manager Klippain-ShakeTune]
type: git_repo
origin: https://github.com/Frix-x/klippain-shaketune.git
path: ~/klippain_shaketune
virtualenv: ~/klippy-env
requirements: requirements.txt
system_dependencies: system-dependencies.json
primary_branch: main
managed_services: klipper


[update_manager filter_monitor]
type: git_repo
path: ~/klipper-filter_monitor
origin: https://github.com/blankhaus/klipper-filter_monitor.git
managed_services: klipper moonraker
primary_branch: main
install_script: install.sh

[update_manager mobileraker]
type: git_repo
path: ~/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
virtualenv: ~/mobileraker-env
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install.sh

[update_manager led_effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
is_system_service: False


